spring.config.import=application_prod.properties
spring.profiles.active=prod
#Applicaation configuration
spring.application.name=${APPLICATION_NAME}
server.port=${APPLICATION_PORT}
server.servlet.context-path=/fortification
#Database credentials
spring.datasource.url=jdbc:mysql://${DB_URL}:${DB_PORT}/${DB_NAME}?nullCatalogMeansCurrent=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#kafka-producer
spring.kafka.producer.bootstrap-servers=${KAFKA_URL}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#kafka-consumer
spring.kafka.consumer.bootstrap-servers=${KAFKA_URL}
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#springdoc
springdoc.version=@version@
springdoc.swagger-ui.use-root-path=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.resolve-schema-properties=true
spring.main.allow-bean-definition-overriding=true
#keycloak
keycloak.realm=${KEYCLOAK_REALM}
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER}
keycloak.resource=${KEYCLOAK_RESOURCE}
keycloak.credentials.secret=${KEYCLOAK_SECRET}
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true
keycloak.ssl-required=none
keycloak.principal-attribute=preferred_username
logging.level.org.apache.kafka=OFF
management.endpoints.web.exposure.include=health
# file upload max size limit
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=1MB
##encoding responses with utf-8 character encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force-response=true
